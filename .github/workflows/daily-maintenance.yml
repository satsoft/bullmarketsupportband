name: Daily Token Discovery & Rankings Update

on:
  schedule:
    # Run daily at 1:00 AM UTC (after CoinGecko updates previous day close)
    - cron: '0 1 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  daily-maintenance:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Update Token Rankings
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      run: |
        echo "üìä Updating market cap rankings..."
        npx tsx scripts/update-rankings.ts
        echo "‚úÖ Rankings update completed"
        
    - name: Discover New Cryptocurrencies
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      run: |
        echo "üîç Discovering new tokens in top 200..."
        npx tsx scripts/discover-cryptocurrencies.ts
        echo "‚úÖ Token discovery completed"
        
    - name: Update Top 150 Cryptocurrencies (API endpoint)
      run: |
        echo "üöÄ Triggering top 150 update via API..."
        curl -X POST "${{ vars.PRODUCTION_URL }}/api/admin/update-top-150" \
          -H "Authorization: Bearer ${{ secrets.CRON_SECRET_KEY }}" \
          -H "Content-Type: application/json" \
          --fail-with-body \
          --max-time 600
        echo "‚úÖ Top 150 update completed"
      
    - name: Log Success
      if: success()
      run: echo "‚úÖ Daily maintenance completed successfully at $(date)"
      
    - name: Log Failure
      if: failure()
      run: |
        echo "‚ùå Daily maintenance failed at $(date)"
        exit 1
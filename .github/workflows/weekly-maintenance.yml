name: Weekly System Maintenance

on:
  schedule:
    # Run every Sunday at 2:00 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch: # Allow manual triggering

jobs:
  weekly-maintenance:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Database Health Check
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        echo "üè• Running database health check..."
        npx tsx scripts/check-database-status.ts
        echo "‚úÖ Database health check completed"
        
    - name: BMSB Coverage Validation
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        echo "üìä Validating BMSB coverage..."
        npx tsx scripts/check-bmsb-coverage.ts
        echo "‚úÖ BMSB coverage validation completed"
        
    - name: System Health Report
      run: |
        echo "üìã Generating system health report..."
        curl -X GET "${{ vars.PRODUCTION_URL }}/api/admin/test-setup" \
          -H "Authorization: Bearer ${{ secrets.ADMIN_API_KEY }}" \
          -H "Content-Type: application/json" \
          --fail-with-body
        echo "‚úÖ System health report completed"
      
    - name: Log Success
      if: success()
      run: echo "‚úÖ Weekly maintenance completed successfully at $(date)"
      
    - name: Log Failure
      if: failure()
      run: |
        echo "‚ùå Weekly maintenance failed at $(date)"
        exit 1